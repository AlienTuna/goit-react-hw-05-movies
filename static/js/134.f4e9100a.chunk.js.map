{"version":3,"file":"static/js/134.f4e9100a.chunk.js","mappings":"sNAMMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAgEvB,UA9De,WACX,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,eAEzBC,GAAWC,EAAAA,EAAAA,MAQjB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGZ,WAA+BC,GAA/B,mGAE0BC,EAAAA,EAAAA,IAAUD,GAFpC,OAEcE,EAFd,OAGcC,EAAOD,EAAIE,QAAQC,KAAI,SAAAC,GACzB,MAAO,CACHC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZC,IAAKH,EAAKI,YACVC,KAAML,EAAKM,aAAaC,MAAM,EAAG,GAExC,IAEDf,EAAkBK,GAZ1B,gDAcQW,QAAQC,MAAR,MAdR,0DAHY,sBACPvB,GADO,oCAqBZwB,CAAgBxB,EACnB,GAAE,CAACA,KAEA,4BACI,SAACL,EAAD,CACI8B,IAAKzB,EACL0B,SAnCZ,SAAqB1B,GACbA,GACAD,EAAgB,CAAE4B,YAAa3B,GAEtC,IAiCQK,IACG,wBACKA,EAAeQ,KAAI,SAAAe,GAAK,OACrB,yBACI,SAAC,KAAD,CACIC,MAAO,CAAEC,KAAM5B,GAEf6B,GAAE,UAAKH,EAAMb,IAHjB,SAKKa,EAAMZ,OAHFY,EAAMb,KAJE,QAe5C,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { getSearch } from \"api/moviesApi\";\n\n// import SearchBar from \"components/SearchBar/SearchBar\";\nimport { lazy, useEffect, useState } from \"react\";\n\nconst SearchBar = lazy(() => import('components/SearchBar/SearchBar'))\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('searchQuery')\n\n    const location = useLocation();\n\n    function inputParams(query) {\n        if (query) {\n            setSearchParams({ searchQuery: query });\n        }\n    }\n\n    const [searchedMovies, setSearchedMovies] = useState(null);\n\n    useEffect(() => {\n        if (!query) return;\n\n        async function getSearchMovies(q) {\n            try {\n                const res = await getSearch(q);\n                const info = res.results.map(item => {\n                    return {\n                        id: item.id,\n                        title: item.title,\n                        img: item.poster_path,\n                        year: item.release_date.slice(0, 4),\n                    }\n                })\n\n                setSearchedMovies(info);\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        getSearchMovies(query);\n    }, [query])\n    return (\n        <div>\n            <SearchBar\n                txt={query}\n                onSearch={inputParams}\n            />\n            {searchedMovies &&\n                <ul>\n                    {searchedMovies.map(movie =>\n                        <li>\n                            <Link\n                                state={{ from: location }}\n                                key={movie.id}\n                                to={`${movie.id}`}\n                            >\n                                {movie.title}\n                            </Link>\n                        </li>\n                    )\n                    }\n                </ul>}\n        </div>\n    )\n}\n\nexport default Movies;"],"names":["SearchBar","lazy","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useState","searchedMovies","setSearchedMovies","useEffect","q","getSearch","res","info","results","map","item","id","title","img","poster_path","year","release_date","slice","console","error","getSearchMovies","txt","onSearch","searchQuery","movie","state","from","to"],"sourceRoot":""}